type Query {
  GetProducts(ids: [ID]): [Product]
  SearchProducts(name: String!): [Product]
  # GetCategories(payload: EmptyRequest): Category
  GetOrders(orderIds: [ID]): [Order]
}

type Mutation {
  CreateProduct(payload: CreateProductRequest): Product
  EditProduct(payload: ProductInput, productId: ID!): Product
  CreateOrder(payload: CreateOrderRequest): Order
  ChangeOrderStatus(order_id: ID!, status: OrderStatus!): Order
}

type Product {
  id: ID
  name: String
  color: String
  price: Float
  category_id: ID
}

type Category {
  id: ID
  name: String
}

type Order {
  id: ID
  status: OrderStatus
  items: [ID]
}

input CreateProductRequest {
  apiKey: String!
  name: String!
  color: String!
  price: Float!
  category_id: ID!
}

input ProductRequest {
  apiKey: String
  product: ProductInput
}

input ProductInput {
  id: ID
  name: String
  color: String
  price: Float
  category_id: ID
}

input GetProductsRequest {
  apiKey: String
  ids: [ID]
}

input SearchProductsRequest {
  apiKey: String
  name: String
}

input CreateOrderRequest {
  apiKey: String
  items: [ID]
}

enum OrderStatus {
  CREATED
  READY_TO_SHIP
  SHIPPED
  DELIVERED
  CANCELLED
}
